"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4],{8199:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var i=t(2322),r=t(5392);const o={},s="Configuration",c={id:"configuration",title:"Configuration",description:"The configuration detailed here is utilized by both the ` component in Core and the ` component in our default interface.",source:"@site/docs/configuration.md",sourceDirName:".",slug:"/configuration",permalink:"/consent-manager/docs/configuration",draft:!1,unlisted:!1,editUrl:"https://github.com/hashbite/consent-manager/edit/master/packages/docs/docs/configuration.md",tags:[],version:"current",frontMatter:{},sidebar:"someSidebar",previous:{title:"Quick Start Guide",permalink:"/consent-manager/docs/quick-start-guide"},next:{title:"Translation and i18n Support",permalink:"/consent-manager/docs/guides/i18n"}},a={},d=[{value:"Setting Up Integrations",id:"setting-up-integrations",level:2},{value:"Utilizing Pre-built Integrations",id:"utilizing-pre-built-integrations",level:3},{value:"Create your own integration",id:"create-your-own-integration",level:3},{value:"<code>IntegrationConfig</code> Structure",id:"integrationconfig-structure",level:3},{value:"Example of a Consent Manager Configuration",id:"example-of-a-consent-manager-configuration",level:2}];function l(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"configuration",children:"Configuration"})}),"\n",(0,i.jsxs)(e.p,{children:["The configuration detailed here is utilized by both the ",(0,i.jsxs)(e.a,{href:"/consent-manager/docs/core/consent-manager",children:[(0,i.jsx)(e.code,{children:"<ConsentManager />"})," component"]})," in Core and the ",(0,i.jsxs)(e.a,{href:"/consent-manager/docs/interface-default/interface",children:[(0,i.jsx)(e.code,{children:"<ConsentManagerDefaultInterface />"})," component"]})," in our default interface."]}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Property"}),(0,i.jsx)(e.th,{children:"Type"}),(0,i.jsx)(e.th,{children:"Description"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"integrations"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"IntegrationConfig[]"})}),(0,i.jsx)(e.td,{children:"Array of configurations for each integration."})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"onChangeDecision"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.a,{href:"https://github.com/hashbite/consent-manager/blob/main/packages/core/src/config.ts#L32",children:(0,i.jsx)(e.code,{children:"Function"})})}),(0,i.jsx)(e.td,{children:"Optional callback that triggers when a consent decision changes."})]})]})]}),"\n",(0,i.jsx)(e.h2,{id:"setting-up-integrations",children:"Setting Up Integrations"}),"\n",(0,i.jsx)(e.h3,{id:"utilizing-pre-built-integrations",children:"Utilizing Pre-built Integrations"}),"\n",(0,i.jsx)(e.p,{children:"For ease and efficiency, you can leverage existing integrations in Consent Manager. These integrations come pre-configured and are ready to use with minimal setup, as demonstrated below:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"import { matomoIntegration } from '@consent-manager/integration-matomo'\n\nconst consentManagerConfig = {\n  integrations: [\n    matomoIntegration({\n      matomoURL: 'https://statistics.yourdomain.com/',\n      siteID: 'YOUR_SITE_ID',\n    }),\n  ],\n}\n"})}),"\n",(0,i.jsx)(e.h3,{id:"create-your-own-integration",children:"Create your own integration"}),"\n",(0,i.jsxs)(e.p,{children:["Alternatively, you can ",(0,i.jsx)(e.a,{href:"/consent-manager/docs/guides/create-custom-integration",children:"create a custom integration"})," tailored to your specific needs."]}),"\n",(0,i.jsxs)(e.h3,{id:"integrationconfig-structure",children:[(0,i.jsx)(e.code,{children:"IntegrationConfig"})," Structure"]}),"\n",(0,i.jsxs)(e.p,{children:["Each integration used within the ",(0,i.jsx)(e.code,{children:"ConsentManagerConfig"})," must conform to the following structure:"]}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Property"}),(0,i.jsx)(e.th,{children:"Type"}),(0,i.jsx)(e.th,{children:"Description"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"id"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"string"})}),(0,i.jsx)(e.td,{children:"Unique identifier for the integration."})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"title"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"string"})}),(0,i.jsx)(e.td,{children:"The title of the integration."})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"description"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"string"})}),(0,i.jsx)(e.td,{children:"A brief description of the integration."})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"category"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"string"})}),(0,i.jsx)(e.td,{children:"The category under which the integration falls."})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"color"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"string"})}),(0,i.jsx)(e.td,{children:"Optional. The primary color associated with the integration."})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"contrastColor"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"string"})}),(0,i.jsx)(e.td,{children:"Optional. A contrasting color for better visibility."})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"privacyPolicyUrl"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"string"})}),(0,i.jsx)(e.td,{children:"URL to the privacy policy of the integration."})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"Icon"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"React.FC"})}),(0,i.jsx)(e.td,{children:"A React component for the integration's icon."})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"pageViewEventHandler"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"PageViewEventTrigger"})}),(0,i.jsx)(e.td,{children:"Optional. Handler for tracking page views."})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"WrapperComponent"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"React.FC"})}),(0,i.jsx)(e.td,{children:"Optional. A wrapper component for the integration."})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"options"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"IntegrationConfigOptions"})}),(0,i.jsx)(e.td,{children:"Optional. Additional configuration options for the integration."})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"enabledByDefault"})}),(0,i.jsx)(e.td,{children:(0,i.jsx)(e.code,{children:"boolean"})}),(0,i.jsx)(e.td,{children:"Optional. Indicates if the integration is enabled by default."})]})]})]}),"\n",(0,i.jsx)(e.h2,{id:"example-of-a-consent-manager-configuration",children:"Example of a Consent Manager Configuration"}),"\n",(0,i.jsx)(e.p,{children:"Here\u2019s an example of how you might configure the Consent Manager in your application:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-javascript",children:"import { ConsentManager } from '@consent-manager/core'\nimport { matomoIntegration } from '@consent-manager/integration-matomo'\nimport { yourCustomIntegration } from './your-integration'\n\nconst consentManagerConfig = {\n  integrations: [\n    matomoIntegration({\n      matomoURL: 'https://statistics.yourdomain.com/',\n      siteID: 'YOUR_SITE_ID',\n    }),\n    yourCustomIntegration({\n      tracking_key: 'VERY#SECURE#KEY',\n    }),\n  ],\n  onChangeDecision: (lastDecisionsState, nextDecisionState) => {\n    // Handle decision changes as you wish\n  },\n}\n\nconst App = () => {\n  return (\n    <ConsentManager config={consentManagerConfig}>\n      {/* Your application components */}\n    </ConsentManager>\n  )\n}\n"})})]})}function h(n={}){const{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(l,{...n})}):l(n)}}}]);