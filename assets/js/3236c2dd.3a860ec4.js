"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[789],{9233:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>a,toc:()=>i});var r=t(2322),s=t(5392);const c={title:"<ConsentManagerDefaultInterface />"},o="<ConsentManagerDefaultInterface /> component",a={id:"interface-default/interface",title:"<ConsentManagerDefaultInterface />",description:"ConsentManagerDefaultInterface is a React component that acts as a wrapper for your application, providing a default user interface for managing consent. It supports all properties passed to the core ConsentManager component.",source:"@site/docs/interface-default/interface.md",sourceDirName:"interface-default",slug:"/interface-default/interface",permalink:"/consent-manager/docs/interface-default/interface",draft:!1,unlisted:!1,editUrl:"https://github.com/hashbite/consent-manager/edit/master/packages/docs/docs/interface-default/interface.md",tags:[],version:"current",frontMatter:{title:"<ConsentManagerDefaultInterface />"},sidebar:"someSidebar",previous:{title:"This Page is Under Construction",permalink:"/consent-manager/docs/todo"},next:{title:"Styling the Consent Manager",permalink:"/consent-manager/docs/interface-default/styling"}},d={},i=[{value:"Props",id:"props",level:2},{value:"Example Usage",id:"example-usage",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"consentmanagerdefaultinterface--component",children:[(0,r.jsx)(n.code,{children:"<ConsentManagerDefaultInterface />"})," component"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"ConsentManagerDefaultInterface"})," is a React component that acts as a wrapper for your application, providing a default user interface for managing consent. It supports all properties passed to the ",(0,r.jsxs)(n.a,{href:"/consent-manager/docs/core/consent-manager",children:["core ",(0,r.jsx)(n.code,{children:"ConsentManager"})," component"]}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,r.jsxs)(n.p,{children:["In addition to all the props supported by ",(0,r.jsx)(n.code,{children:"ConsentManager"}),", ",(0,r.jsx)(n.code,{children:"ConsentManagerDefaultInterface"})," also accepts:"]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Prop"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"messages"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Messages"})}),(0,r.jsx)(n.td,{children:"Custom messages for localization and text customization."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"children"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"React.ReactNode"})}),(0,r.jsx)(n.td,{children:"The application's components to be rendered within the manager."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"config"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ConsentManagerConfig"})}),(0,r.jsx)(n.td,{children:"Configuration object for Consent Manager."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"styles"}),", ",(0,r.jsx)(n.code,{children:"animationStyles"})]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Styles"})}),(0,r.jsx)(n.td,{children:"Custom styling for the interface."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"ToggleButton"}),", ",(0,r.jsx)(n.code,{children:"ToggleIcon"})]}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"React.ComponentType<ToggleButtonProps>"}),", ",(0,r.jsx)(n.code,{children:"React.ComponentType<IconProps>"})]}),(0,r.jsx)(n.td,{children:"Components for toggle buttons and icons."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"CloseIcon"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"React.ComponentType<IconProps>"})}),(0,r.jsx)(n.td,{children:"Component for the close icon."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Switch"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"React.ComponentType<SwitchProps>"})}),(0,r.jsx)(n.td,{children:"Component for the switch control."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Button"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"React.ComponentType<ButtonProps>"})}),(0,r.jsx)(n.td,{children:"Component for buttons."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Form"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"React.ComponentType<ConsentFormProps>"})}),(0,r.jsx)(n.td,{children:"Component for the consent form."})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"import { ConsentManagerDefaultInterface } from '@consent-manager/interface-default';\n\nconst App = () => (\n  <ConsentManagerDefaultInterface config={myConfig} store={myStore}>\n    {/* Rest of your application */}\n  </ConsentManagerDefaultInterface>\n);\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);