"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[379],{8899:(s,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>r,default:()=>l,frontMatter:()=>i,metadata:()=>c,toc:()=>a});var o=n(2322),t=n(5392);const i={id:"known-issues",title:"Known Issues"},r=void 0,c={id:"known-issues",title:"Known Issues",description:"* ConsentManager component does not verify required props",source:"@site/docs/known-issues.md",sourceDirName:".",slug:"/known-issues",permalink:"/consent-manager/docs/known-issues",draft:!1,unlisted:!1,editUrl:"https://github.com/hashbite/consent-manager/edit/master/packages/docs/docs/known-issues.md",tags:[],version:"current",frontMatter:{id:"known-issues",title:"Known Issues"}},d={},a=[];function u(s){const e={code:"code",li:"li",ul:"ul",...(0,t.a)(),...s.components};return(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"ConsentManager"})," component does not verify required props"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:'<PrivacyShield id="youtube"/>'})," should use ",(0,o.jsx)(e.code,{children:"integrationId"})," as prop name"]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.code,{children:"<PrivacyShield />"})," should accept a fallback component as prop"]}),"\n"]})}function l(s={}){const{wrapper:e}={...(0,t.a)(),...s.components};return e?(0,o.jsx)(e,{...s,children:(0,o.jsx)(u,{...s})}):u(s)}}}]);