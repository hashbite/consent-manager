"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[810],{6436:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>i});var o=t(2322),r=t(5392);const s={},a="ConsentManager",c={id:"core/consent-manager",title:"ConsentManager",description:"ConsentManager is the core component that provides context and state management for all consent-related functionality. It should wrap the root of your application.",source:"@site/docs/core/consent-manager.md",sourceDirName:"core",slug:"/core/consent-manager",permalink:"/consent-manager/docs/core/consent-manager",draft:!1,unlisted:!1,editUrl:"https://github.com/hashbite/consent-manager/edit/master/packages/docs/docs/core/consent-manager.md",tags:[],version:"current",frontMatter:{},sidebar:"someSidebar",previous:{title:"Client-Side Routing in SPAs",permalink:"/consent-manager/docs/guides/client-side-routing"},next:{title:"ConsentManagerForm",permalink:"/consent-manager/docs/core/consent-manager-form"}},d={},i=[{value:"Props",id:"props",level:2},{value:"Example Usage",id:"example-usage",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"consentmanager",children:"ConsentManager"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"ConsentManager"})," is the core component that provides context and state management for all consent-related functionality. It should wrap the root of your application."]}),"\n",(0,o.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Prop"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"config"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"ConsentManagerConfig"})}),(0,o.jsx)(n.td,{children:"Configuration object for Consent Manager."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"fallbackComponent"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"React.ComponentType<FallbackComponentProps>"})}),(0,o.jsx)(n.td,{children:"Optional. Custom fallback component for unconsented integrations."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"store"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"ConsentManagerStore"})}),(0,o.jsx)(n.td,{children:"Storage mechanism for consent decisions."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"children"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"React.ReactNode"})}),(0,o.jsx)(n.td,{children:"The application's components."})]})]})]}),"\n",(0,o.jsx)(n.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"import { ConsentManager } from '@consent-manager/core';\n\nconst App = () => (\n  <ConsentManager config={myConfig} store={myStore}>\n    {/* Rest of your application */}\n  </ConsentManager>\n);\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);