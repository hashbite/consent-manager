(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{115:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return s})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return p})),t.d(n,"default",(function(){return u}));var o,r=t(1),a=t(7),i=(t(0),t(38)),s={id:"getting-started",title:"Getting Started"},c={unversionedId:"getting-started",id:"getting-started",isDocsHomePage:!1,title:"Getting Started",description:"Installation",source:"@site/docs/getting-started.md",slug:"/getting-started",permalink:"/consent-manager/docs/getting-started",editUrl:"https://github.com/techboi-io/consent-manager/edit/master/packages/docs/docs/getting-started.md",version:"current",sidebar:"someSidebar",previous:{title:"What is Consent Manager?",permalink:"/consent-manager/docs/"},next:{title:"ConsentManager (Provider)",permalink:"/consent-manager/docs/provider"}},p=[{value:"Installation",id:"installation",children:[]},{value:"Embedding into your application",id:"embedding-into-your-application",children:[{value:"Preparing the context",id:"preparing-the-context",children:[]}]},{value:"Wrapping components that need users concent for proper functionallity",id:"wrapping-components-that-need-users-concent-for-proper-functionallity",children:[{value:"Shielding the component",id:"shielding-the-component",children:[]}]},{value:"Displaying a consent form to the end user",id:"displaying-a-consent-form-to-the-end-user",children:[]},{value:"Next steps",id:"next-steps",children:[]}],d=(o="ConsentManager",function(e){return console.warn("Component "+o+" was not imported, exported, or provided by MDXProvider as global scope"),Object(i.b)("div",e)}),l={toc:p};function u(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"installation"},"Installation"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-sh"},"npm install @consent-manager/core use-persisted-state\n")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-sh"},"yarn add @consent-manager/core use-persisted-state\n")),Object(i.b)("h2",{id:"embedding-into-your-application"},"Embedding into your application"),Object(i.b)("p",null,"Lets start off with a very basic implementation of a React app."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n")),Object(i.b)("h3",{id:"preparing-the-context"},"Preparing the context"),Object(i.b)("p",null,"Wrap your application with the ",Object(i.b)("a",{parentName:"p",href:"/consent-manager/docs/provider"},Object(i.b)(d,{mdxType:"ConsentManager"})," provider"),"."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-diff"},"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n+ import { ConsentManager } from '@consent-manager/core'\n+ import createPersistedState from 'use-persisted-state'\n\n\n+ const useConsentStateStore = createPersistedState('consent-manager-docs')\n\n+ const Wrapper = () => {\n+   const storage = useConsentStateStore()\n+   const config = {\n+     integrations: [\n+       {\n+         id: 'youtube',\n+         title: 'YouTube',\n+         description:\n+           'Enjoy the videos and music you love, upload original content, and share it all with friends, family, and the world on YouTube.',\n+       },\n+     ],\n+   }\n+   <ConsentManager config={config} store={storage}>\n+     <App />\n+   </ConsentManager>,\n+ }\n\nReactDOM.render(\n-   <App />\n+   <Wrapper />\n  document.getElementById('root')\n);\n")),Object(i.b)("h2",{id:"wrapping-components-that-need-users-concent-for-proper-functionallity"},"Wrapping components that need users concent for proper functionallity"),Object(i.b)("p",null,"Lets take this very simple component as example, it renders a YouTube video."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import React from 'react'\nimport ReactYouTube from 'react-youtube'\n\nconst YouTube = ({ id, ...props }) => {\n  return <ReactYouTube videoid={id} {...props} />\n}\n\nexport default YouTube\n")),Object(i.b)("p",null,"As YouTube loves tracking, injects cookies and does more, we need our users consent to render the video."),Object(i.b)("h3",{id:"shielding-the-component"},"Shielding the component"),Object(i.b)("p",null,"To ensure no data can be sent anywhere, we wrap our component with the PrivacyShield component."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-diff"},"import React from 'react'\nimport ReactYouTube from 'react-youtube'\n+ import { PrivacyShield } from '@consent-manager/core'\n\n\nconst YouTube = ({ id, ...props }) => {\n  return (\n+    <PrivacyShield id=\"youtube\">\n      <ReactYouTube videoid={id} {...props} />\n+    </PrivacyShield>\n  )\n}\n\nexport default YouTube\n")),Object(i.b)("h2",{id:"displaying-a-consent-form-to-the-end-user"},"Displaying a consent form to the end user"),Object(i.b)("p",null,"As last step we need to give the end user a way to give consent on data processing and sharing with external parties."),Object(i.b)("p",null,"So let us add a simple form unstyled form to enable that functionallity."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-diff"},"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n- import { ConsentManager } from '@consent-manager/core'\n+ import { ConsentManager, ConsentManagerForm } from '@consent-manager/core'\nimport createPersistedState from 'use-persisted-state'\n\nconst Wrapper = () => {\n  const storage = useConsentStateStore()\n  const config = {\n    integrations: [\n      {\n        id: 'youtube',\n        title: 'YouTube',\n        description:\n          'Enjoy the videos and music you love, upload original content, and share it all with friends, family, and the world on YouTube.',\n      },\n    ],\n  }\n  <ConsentManager config={config} store={storage}>\n    <App />\n+   <ConsentManagerForm />\n  </ConsentManager>,\n}\n\nReactDOM.render(\n  <Wrapper />\n  document.getElementById('root')\n);\n")),Object(i.b)("h2",{id:"next-steps"},"Next steps"),Object(i.b)("p",null,"As you've probably seen, the styling is very rudimentary. This is on purpose, our goal is to add as little extra weight to your bundle size as possible. We try to support all common ways of styling in React. No matter if you prever plain css, BEM, css-in-js or other ways."),Object(i.b)("p",null,"@todo implement and document custom styling. Sorry, we did not work in this, yet!"))}u.isMDXComponent=!0}}]);