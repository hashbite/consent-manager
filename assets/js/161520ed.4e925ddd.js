"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[508],{1067:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var t=r(2322),o=r(5392);const s={title:"Helper Functions"},i="Helper Functions in Consent Manager Core",c={id:"core/helpers",title:"Helper Functions",description:"Consent Manager Core offers a few helper functions that enhance the user experience and accessibility of your integrations.",source:"@site/docs/core/helpers.md",sourceDirName:"core",slug:"/core/helpers",permalink:"/consent-manager/docs/core/helpers",draft:!1,unlisted:!1,editUrl:"https://github.com/hashbite/consent-manager/edit/master/packages/docs/docs/core/helpers.md",tags:[],version:"current",frontMatter:{title:"Helper Functions"},sidebar:"someSidebar",previous:{title:"<PrivacyShield />",permalink:"/consent-manager/docs/core/privacy-shield"},next:{title:"<ConsentManagerDefaultInterface />",permalink:"/consent-manager/docs/interface-default/interface"}},a={},l=[{value:"<code>getForegroundColor(bgHex: string): string</code>",id:"getforegroundcolorbghex-string-string",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Example Usage",id:"example-usage",level:3},{value:"<code>createIconComponentFromSimpleIconsSvgPath(title: string, path: string)</code>",id:"createiconcomponentfromsimpleiconssvgpathtitle-string-path-string",level:2},{value:"Parameters",id:"parameters-1",level:3},{value:"Returns",id:"returns-1",level:3},{value:"Example Usage in Custom Integration",id:"example-usage-in-custom-integration",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"helper-functions-in-consent-manager-core",children:"Helper Functions in Consent Manager Core"}),"\n",(0,t.jsx)(n.p,{children:"Consent Manager Core offers a few helper functions that enhance the user experience and accessibility of your integrations."}),"\n",(0,t.jsx)(n.h2,{id:"getforegroundcolorbghex-string-string",children:(0,t.jsx)(n.code,{children:"getForegroundColor(bgHex: string): string"})}),"\n",(0,t.jsxs)(n.p,{children:["This function determines a suitable foreground color based on the background color to meet WCAG contrast ratio requirements. It uses the ",(0,t.jsx)(n.a,{href:"https://www.npmjs.com/package/wcag-contrast",children:"wcag-contrast"})," module, which adheres to accessibility standards ensuring content readability for all users, including those with low vision."]}),"\n",(0,t.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"bgHex"})," (string): The hexadecimal color code of the background."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"returns",children:"Returns"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["(string): A hexadecimal color code (",(0,t.jsx)(n.code,{children:"#000"})," or ",(0,t.jsx)(n.code,{children:"#fff"}),") for the foreground, ensuring optimal contrast."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"example-usage",children:"Example Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"import { getForegroundColor } from '@consent-manager/core'\n\nconst backgroundColor = '#ff5733'\nconst foregroundColor = getForegroundColor(backgroundColor)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"createiconcomponentfromsimpleiconssvgpathtitle-string-path-string",children:(0,t.jsx)(n.code,{children:"createIconComponentFromSimpleIconsSvgPath(title: string, path: string)"})}),"\n",(0,t.jsxs)(n.p,{children:["This function generates a React component for an icon using an SVG path from ",(0,t.jsx)(n.a,{href:"https://github.com/icons-pack/react-simple-icons",children:"Simple Icons"}),". It's particularly useful when creating custom integrations, ensuring that icons match the brand's CI in terms of color and style within the Consent Manager form and privacy shield."]}),"\n",(0,t.jsx)(n.h3,{id:"parameters-1",children:"Parameters"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"title"})," (string): The title of the icon, used for accessibility."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"path"})," (string): The SVG path data for the icon."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"returns-1",children:"Returns"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"React.FC<IntegrationIconComponentProps>"})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"example-usage-in-custom-integration",children:"Example Usage in Custom Integration"}),"\n",(0,t.jsx)(n.p,{children:"When creating a custom integration, you can utilize this function to incorporate brand-specific icons:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"import {\n  createIconComponentFromSimpleIconsSvgPath,\n  getForegroundColor,\n  IntegrationConfig\n} from '@consent-manager/core';\n\n// Replace with your service's icon\nimport { siYourService } from 'simple-icons';\n\nexport function yourServiceIntegration(options: { apiKey: string }): IntegrationConfig {\n  const { title, hex, path } = siYourService;\n  const color = `#${hex}`;\n  const contrastColor = getForegroundColor(color);\n  const Icon = createIconComponentFromSimpleIconsSvgPath(title, path);\n\n  return {\n    // ... other configuration properties\n    Icon,\n    color,\n    contrastColor,\n    // ...\n  };\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);